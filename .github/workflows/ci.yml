 codex/initialize-npu-inference-template-iprk80

codex/initialize-npu-inference-template-v1n7c2

codex/initialize-npu-inference-template-ys4nnv

codex/initialize-npu-inference-template-gw57mq
main
 main
name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.10','3.11']
    defaults:
      run:
        shell: bash
        working-directory: .
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -U pip
      - run: pip install -r requirements.txt
 codex/initialize-npu-inference-template-v1n7c2
      - run: pip install ruff mypy pytest-cov
      - name: pytest (FAKE)
        run: pytest -q --maxfail=1 --disable-warnings
        env:
          BLUEPRINT_FAKE: "1"

codex/initialize-npu-inference-template-ys4nnv
      - run: pip install ruff mypy

main
      - name: pytest (FAKE)
        run: pytest -q
        env:
          BLUEPRINT_FAKE: "1"
codex/initialize-npu-inference-template-ys4nnv
 main
      - run: ruff check .
      - run: mypy --version && mypy app/security.py app/mission.py app/ascent.py app/geometry2.py scripts/index_experiments.py proof/index_db.py
      - name: API smoke
        run: python scripts/api_smoke.py
 codex/initialize-npu-inference-template-v1n7c2


      - name: API smoke
        run: python scripts/api_smoke.py

 main
name: CI (smoke)
on: [push, pull_request]
jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      ALLOW_FAKE_GEN: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Launch API
        run: |
          python -m uvicorn src.api.server:app --host 127.0.0.1 --port 9100 &
          echo $! > .uv.pid
          sleep 4
      - name: Health
        run: curl -sSf http://127.0.0.1:9100/health
      - name: Infer
        run: |
          curl -sSf -H "Content-Type: application/json" \
            --data '{"prompt":"ping","max_new_tokens":8}' \
            http://127.0.0.1:9100/v1/infer | tee out.json
      - name: Stop
        if: always()
        run: kill $(cat .uv.pid) || true
 codex/initialize-npu-inference-template-iprk80

main
main
 main
 main
